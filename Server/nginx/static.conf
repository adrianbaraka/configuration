redirect from http to https
server {
     listen 80;
     listen [::]:80;
     server_name domain.example.com;

     # Redirect all HTTP requests to HTTPS
     return 301 https://$host$request_uri;
}


server {
    listen 443 ssl;
    ssl_certificate /etc/nginx/ssl/your_domain.crt;
    ssl_certificate_key /etc/nginx/ssl/your_domain.key; 


    #listen 80;
    #listen [::]:80;
    server_name example.com www.example.com;

    #look for these files
    root /var/www/example.com/html;
    index index.html index.htm;

    # Serve static files efficiently
    location ~* \.(?:css|js|gif|jpg|jpeg|png|ico|svg|woff|woff2|ttf|eot|mp4|webm|ogg)$ {
        # caches the files in the regex for specified days (30d)
        expires 30d;
        #  Disables access logging for these static files
        access_log off;
        #  Sets the Cache-Control header, providing more explicit caching instructions to the browser (caching 30days in seconds)
        add_header Cache-Control "public, max-age=2592000";
    }

    # Prevent access to dotfiles (.htaccess, .git, etc.)
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    #Enable gzip compression for text-based content
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/rss+xml application/atom+xml image/svg+xml;
    
    
    #rate limiting 
    limit_req zone=one burst=5 nodelay;
}
